#####Version 1

push () {
	local directory="$HOME/Sync" 
	if [[ $# -eq 0 ]]
	then
		message="Updated Everything" 
		git -C $directory add .
		git -C $directory commit -m "$message"
		git -C $directory push
	fi
	while getopts "hf:m:" opt
	do
		case $opt in
			(h) echo "Usage: functionName [-h] [-m <message>] <arg1> <arg2>"
				echo ""
				echo "Options:"
				echo "-h, --help              Print help message and exit."
				echo "-m, --message <message> Specify a message to add to your commit."
				echo ""
				echo "EXAMPLES"
				echo "  Example 1: Stage changes for both $HOME/Sync/Arch/Configs/zshrc and $HOME/Sync/Arch/setup.sh and Commit them to Sync Repo"
				echo "      push zshrc setup.sh" ;;
			(f) cp $(type push | rev | awk '{print $1}' | rev) $HOME/Sync/Arch/functions/$OPTARG
				git -C $HOME/Sync add Arch/functions/$OPTARG
				git -C $HOME/Sync commit -m "Added New Function - $OPTARG"
				git -C $HOME/Sync push
				git -C $HOME/Sync pull
				rm -rf $HOME/$OPTARG.wip $HOME/.$OPTARG;;
			(m) message=$OPTARG  ;;
			(:) echo "Option -$OPTARG requires an argument." >&2
				exit 1 ;;
			(\?) echo "Invalid option: -$OPTARG" >&2
				exit 1 ;;
		esac
	done
	shift $((OPTIND - 1))
	arg1=$1 
	arg2=$2 
	if [ $@ -ne 0 ]
	then
		message="Edited file(s) $@" 
		for i in $@
		do
			filename="$(sudo find $HOME -path $HOME/Sync/Kali -prune -o -type f -name "$i" -print)" 
			directoryName=$(echo $filename | rev | cut -d/ -f2 | rev) 
			directory=$(sudo find $HOME -type d -path $HOME/Sync/Kali -prune -o -name "$directoryName" -print) 
			git -C $directory add $filename
		done
		git -C $directory commit -m "$message"
		git -C $directory push
	fi
}
