PATH=$PATH:$HOME/Tools:
echo "\n[*] Your IP is" $(curl -s https://dnsleaktest.com | grep Hello | cut -d " " -f 3 | cut -d "<" -f 1)"\n"

#My Functions

function pacupdate {   	# Complete update and upgrade
	git -C $HOME/Sync pull;
	sudo pacman -Syyu;
	sudo pacman -Rcns $(sudo pacman -Qdtq)
}

function mirrors {		# Update my mirror list with the fastest mirrors
	sudo reflector --latest 20 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
}

function aliases {		# Edit my custom Alias file
	#sudo nano $HOME/Sync/Arch/Configs/zsh_aliases;
	#git -C $HOME/Sync add .;
	#git -C $HOME/Sync commit -m "Saved";
	#git -C $HOME/Sync push;
	#reset
	google-chrome-stable https://github.com/kalibeginnings/Sync/edit/main/Arch/Configs/zsh_aliases &
	
}

function pull {			# Pull changes into my Sync directory
	git -C /home/blackarch/Sync pull
	source $HOME/Sync/Arch/Configs/zsh_aliases
}

function zshrc {		# Edit zshrc file in github
	#sudo nano $HOME/Sync/Arch/Configs/zshrc;
	#git -C $HOME/Sync add .;
	#git -C $HOME/Sync commit -m "Saved";
	#git -C $HOME/Sync push;
	#reset
	google-chrome-stable https://github.com/kalibeginnings/Sync/edit/main/Arch/Configs/zshrc && pull
}

function zshngrok {		# Edit ngrok file in github
	#sudo nano $HOME/Sync/Arch/Configs/zsh_ngrok;
	#git -C $HOME/Sync add .;
	#git -C $HOME/Sync commit -m "Saved";
	#git -C $HOME/Sync push;
	#reset
	google-chrome-stable https://github.com/kalibeginnings/Sync/edit/main/Arch/Configs/zsh_ngrok &
}

function help {	        	# Shows all of my Custom Functions
        grep function $HOME/.zsh_aliases | sed -e 's#function#*#' -e 's#{# #' -e '/alias/d' | sort
}

function pacfix {       	# Fix Broken Packages
        if [[ $1 = 'list' ]]; then 
                echo "The following packages are broken:"
                echo $(sudo pacman -Qk 2>/dev/null | grep -v ' 0 missing files' | cut -d: -f1)
                echo ""
	else;
	        sudo pacman -Qk 2>/dev/null | grep -v ' 0 missing files' | cut -d: -f1 | while read -r package; do sudo pacman -S "$package" --overwrite "*" --noconfirm; done
        fi
}

function t {			# Attach last tmux session
	tmux attach
}

function e {			# Exit Session
	exit
}

function myip {			# Show if Your IP is Hidden or Not
	echo "\n[*] Your IP is" $(curl -s https://dnsleaktest.com | grep Hello | cut -d " " -f 3 | cut -d "<" -f 1)
}

function cpu {			# Monitors CPU Every Nth Seconds
	iostat -c $1
}

function cheat {		# Find Examples of Command and its arguments
	#curl cheat.sh/$1
	if [[ $1 = 'help' ]]; then 
		echo """
		cheat <command>				Query a specific command
		cheat <language><question>		Query how to accomplish something in a specific language
		cheat learn <language>			Learn any of 60 languages from your shell"""
	elif [[ $1 = 'shell' ]]; then
		cheat-sh --shell
	elif [ "$#" -ne 1 ]; then 
		if [[ $1 = 'learn' ]]; then
			curl cheat.sh/$2/:learn | less
		else
			curl cheat.sh/$1/$2+$3+$4+$5+$6
		fi
	elif [ "$#" -eq 1 ]; then
		curl cheat.sh/$1
	fi
}

#function search {		
#	for i in $(find /usr/bin/ -name "$1*" | sed "s|/usr/bin/||g") ; do pacman -Qi $i >> /tmp/commands.txt 2>&1; done
#	sed -i '/Name\|Description\|URL/!d' /tmp/commands.txt
#	sed -i "s|Name|\nName|g" /tmp/commands.txt
#	cat /tmp/commands.txt
#	rm /tmp/commands.txt
#}

function package {			# Find Commands associated with a package
	for i in $(pacman -Qsq $@); do echo '\e[31m'"---$i---"'\e[0m'; pacman -Ql $i | sed -n -e 's/.*\/bin\///p' | tail -n +2; echo ""; done
}

function pacsearch {			# Search a descriptive list of packages
	for i in $(pacman -Ssq $@); do 
		pacman -Si $i | grep "Name\|Description\|URL"
		echo "\n"; 
	done
}

function search {			# Search a descriptive list of packages in a table
	declare -a results
	results[1]="  Name+       Description+                        URL\n"
	x=1
	list=$(pacman -Ssq $@)
	for i in $(echo $list); do
		x=$((x+1))
		name=$i
		description=$(pacman -Si $i 2>&1 | grep "Description" | sed "s|Description ||g" )
		url=$(pacman -Si $i 2>&1 | grep "URL" | sed "s|URL ||g")
		results[$x]="$name+$description+$url\n";
	done
	echo $results | column --table --table-columns=3 --separator=+ --table-wrap=3
}


function checkports {		# Identify which ports are currently open on local machine
	nmap -sT -T5 -p- 127.0.0.1
}

function services {		# Show which services are currently running
	systemctl | grep running
}

function port {  		# Identify the service behind specific port(s)
	sudo lsof -i:$1
}

function harden {  		# Analyze a specific service's security
	/usr/bin/systemd-analyze security $1
}

function juice {		# Start SSH service and ngrok tunnel
	sudo systemctl start sshd && tmux -c "ngrok tcp 55555 -authtoken 1yKy2AnObahtJLj4SPLP3HvTMJX_7ztaCXBfomodfgTNh3rqN"
}

function maskurl {		# Mask an URL
	sudo python3 $HOME/Tools/maskurl/maskurl.py
}

function start {		# Start a Service
	sudo systemctl start $1
}

function status {		# Status of a Service
        sudo systemctl status $1
}

function stop {                # Stop a Service
        sudo systemctl stop $1
}

function googledns {		# Change DNS to Google for Faster network
	sed -i "s/nameserver/\#nameserver/" /etc/resolv.conf &&
	echo "nameserver 8.8.8.8\nnameserver 8.8.4.4" >> /etc/resolv.conf
}

##############################################################################
# COLORS AND BACKGROUNDS 
##############################################################################
# note: \e or \x1B also work instead of \033 
# Reset
#Color_Off='\033[0m' # Text Reset

# Regular Colors
#Black='\033[0;30m'  # Black
#Red='\033[0;31m'    # Red
#Green='\033[0;32m'  # Green
#Yellow='\033[0;33m' # Yellow
#Blue='\033[0;34m'   # Blue
#Purple='\033[0;35m' # Purple
#Cyan='\033[0;36m'   # Cyan
#White='\033[0;97m'  # White

# Additional colors
#LGrey='\033[0;37m'  # Ligth Gray
#DGrey='\033[0;90m'  # Dark Gray
#LRed='\033[0;91m'   # Ligth Red
#LGreen='\033[0;92m' # Ligth Green
#LYellow='\033[0;93m'# Ligth Yellow
#LBlue='\033[0;94m'  # Ligth Blue
#LPurple='\033[0;95m'# Light Purple
#LCyan='\033[0;96m'  # Ligth Cyan


# Bold
#BBlack='\033[1;30m' # Black
#BRed='\033[1;31m'   # Red
#BGreen='\033[1;32m' # Green
#BYellow='\033[1;33m'# Yellow
#BBlue='\033[1;34m'  # Blue
#BPurple='\033[1;35m'# Purple
#BCyan='\033[1;36m'  # Cyan
#BWhite='\033[1;37m' # White

# Underline
#UBlack='\033[4;30m' # Black
#URed='\033[4;31m'   # Red
#UGreen='\033[4;32m' # Green
#UYellow='\033[4;33m'# Yellow
#UBlue='\033[4;34m'  # Blue
#UPurple='\033[4;35m'# Purple
#UCyan='\033[4;36m'  # Cyan
#UWhite='\033[4;37m' # White

# Background
#On_Black='\033[40m' # Black
#On_Red='\033[41m'   # Red
#On_Green='\033[42m' # Green
#On_Yellow='\033[43m'# Yellow
#On_Blue='\033[44m'  # Blue
#On_Purple='\033[45m'# Purple
#On_Cyan='\033[46m'  # Cyan
#On_White='\033[47m' # White



#### Key Bindings
#### C-up		# Update
#### C-down		# Anonymize Shell
## Run showkey -a to list characters for specific key combo and then "bindkey -s 'key' 'command\n'"
bindkey -s '^[[1;5A' 'update\n'
bindkey -s '^[[1;5B' 'sudo service tor start && proxychains4 zsh\n'
